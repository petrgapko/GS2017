open preprocess.xlsx --sheet=7 --quiet
setobs 4 1991:1 --time-series
diff GDP PI U IP HPIr HPIc Yr Ir Yc Ic

#DESC STAT

#detrending of trended vars
ols GDP const time
detrGDP=GDP-$coeff[2]*time

ols PI const time
detrPI=PI-$coeff[2]*time

#graphs 
scatters detrGDP IP U HPIr detrPI FEDR --with-lines
scatters Yr Ir Yc Ic --with-lines
# !!! scatters have to be performed manually

#UNIT ROOT

adf 12 FEDR --c --ct --test-down=AIC
#trend stationary

adf 12 GDP --c --ct --test-down=AIC 
adf 12 PI --c --ct --test-down=AIC 
adf 12 U --c --ct --test-down=AIC 
adf 12 IP --c --ct --test-down=AIC 
adf 12 HPIr --c --ct --test-down=AIC 
adf 12 HPIc --c --ct --test-down=AIC 
adf 12 Yr --c --ct --test-down=AIC 
adf 12 Ir --c --ct --test-down=AIC 
adf 12 Yc --c --ct --test-down=AIC 
adf 12 Ic --c --ct --test-down=AIC 
#unit root not rejected

#COINTEGRATION

#macro alone 

macro_EG <- coint 4 IP PI U HPIr GDP  --ct --test-down 
var 10 GDP PI U IP HPIr; FEDR --lagselect
macro_joh<- coint2 2  PI U IP HPIr GDP --ct

#factors

factors_EG_I <- coint 2 Ir Ic 
factors_EG_Y <- coint 2 Yr Yc 
factors_EG_IY <- coint 2 Ir Ic Yr Yc 

var 10 Yr Ir Yc Ic --lagselect 
factors_joh<- coint2 2 Yr Ir Yc Ic 

#macro and factors

coint 0 Ic           U PI IP GDP HPIr --ct 
coint 0    Ir        U PI IP GDP HPIr --ct 
coint 0       Yc     U PI IP GDP HPIr --ct 
coint 0          Yr  U PI IP GDP HPIr --ct 
#only Ix convincingly cointegrated

#removving U and PI without which the cointegration is present
EG_Ic<-  coint 0 Ic         IP GDP HPIr --ct 
EG_Ir<-  coint 0    Ir      IP GDP HPIr --ct 

var 10 Ic Ir Yc Yr IP GDP HPIr  --lagselect
coint2 2 IP GDP HPIr --ct
#no cointegration here.

joh <- coint2 2 Yr Ir Yc Ic IP GDP HPIr --ct
joh <- coint2 2 Yr Ir Yc Ic IP GDP HPIr; d_U(-1) d_PI(-1) FEDR(-1) --ct
#indicates rank 3 

vecm 2 3 Ic Ir Yc Yr IP GDP HPIr; FEDR(-1) d_U(-1) d_PI(-1)  --crt

restrict --full
    b[1,Ic]=1
    b[2,Ic]=0
    b[3,Ic]=0
    b[1,Ir]=0
    b[2,Ir]=1
    b[3,Ir]=0
    b[1,Yc]=0
    b[2,Yc]=0
    b[3,Yc]=1
    b[2,IP]=0
end restrict

series EC1 = $ec[,1]
series EC2 = $ec[,2]
series EC3 = $ec[,3]

list ALL_ENDO = d_Ic(-1) d_Ir(-1) d_Yc(-1) d_Yr(-1) 
list ALL_EXO = d_U(-1) d_PI(-1) d_IP(-1) d_GDP(-1) d_HPIr(-1) FEDR(-1) 
list ALL_EC=EC1 EC2 EC3  	

#replication of vecm
system method=fiml
    equation d_Ic const ALL_ENDO ALL_EXO ALL_EC
    equation d_Ir const ALL_ENDO ALL_EXO ALL_EC
    equation d_Yc const ALL_ENDO ALL_EXO ALL_EC
    equation d_Yr const ALL_ENDO ALL_EXO ALL_EC
end system


#only significant , own lags, ECs and consts

system method=fiml
    equation d_Ic const d_Ic(-1) d_Yc(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Ir const d_Ir(-1) d_Yc(-1) d_GDP(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Yc const d_Yc(-1) d_Yr(-1) d_HPIr(-1) d_U(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Yr const d_Yr(-1) d_Ir(-1) d_U(-1) FEDR(-1) EC1 EC2 EC3
end system

#final iteration

system method=fiml
    equation d_Ic d_Ic(-1) d_Yc(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Ir  d_Ir(-1) d_Yc(-1) d_GDP(-1) d_HPIr(-1) FEDR(-1) EC1 EC2
    equation d_Yc const d_Yc(-1)  d_HPIr(-1) d_U(-1) FEDR(-1) EC1 EC3
    equation d_Yr const d_Ir(-1) d_U(-1) FEDR(-1) EC1 EC2 EC3
end system

full_ll = $lnl

#without U
system method=fiml
    equation d_Ic d_Ic(-1) d_Yc(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Ir  d_Ir(-1) d_Yc(-1) d_GDP(-1) d_HPIr(-1) FEDR(-1) EC1 EC2
    equation d_Yc const d_Yc(-1)  d_HPIr(-1)  FEDR(-1) EC1 EC3
    equation d_Yr const d_Ir(-1)  FEDR(-1) EC1 EC2 EC3
end system

wu_ll = $lnl
printf " LR-test, rank = 2: chi^2(3) = %6.4f [%6.4f]\n", 2*(full_ll-wu_ll), \
pvalue(X, 2, 2*(full_ll-wu_ll))
