open preprocess.xlsx --sheet=8 --quiet
setobs 4 1991:1 --time-series

diff GDP PI U IP HPIr HPIc Yr Ir Yc Ic

smpl 1991:1 2016:4 

#UNIT ROOT TESTS

adf 12 FEDR --c --ct --test-down=AIC
adf 12 GDP --c --ct --test-down=AIC 
adf 12 PI --c --ct --test-down=AIC 
adf 12 U --c --ct --test-down=AIC 
adf 12 IP --c --ct --test-down=AIC 
adf 12 HPIr --c --ct --test-down=AIC 
adf 12 HPIc --c --ct --test-down=AIC 
adf 12 Yr --c --ct --test-down=AIC 
adf 12 Ir --c --ct --test-down=AIC 
adf 12 Yc --c --ct --test-down=AIC 
adf 12 Ic --c --ct --test-down=AIC 
#unit root not rejected

#COINTEGRATION

#macro alone 

macro_EG <- coint 4 IP PI U HPIr GDP  --ct --test-down --skip-df
var 10 GDP PI U IP HPIr; FEDR --lagselect
macro_joh<- coint2 2  PI U IP HPIr GDP --ct

#factors alone

factors_EG_I <- coint 4 Ir Ic  --ct --test-down --skip-df
factors_EG_Y <- coint 4 Yr Yc  --ct --test-down --skip-df

var 10 Yr Ir Yc Ic --lagselect 
factors_joh<- coint2 2 Yr Ir Yc Ic 

#individual factors and macro

coint 4 Ic           U PI IP GDP HPIr --ct --test-down --skip-df
coint 4    Ir        U PI IP GDP HPIr --ct --test-down --skip-df
coint 4       Yc     U PI IP GDP HPIr --ct --test-down --skip-df
coint 4          Yr  U PI IP GDP HPIr --ct --test-down --skip-df

#removving U and PI (without which the cointegration is present)
EG_Ic<-  coint 0 Ic         IP GDP HPIr --ct 
EG_Ir<-  coint 0    Ir      IP GDP HPIr --ct 


#MODEL

var 10 Yc Ic Yr Ir IP GDP HPIr --lagselect


joh <- coint2 2 Yr Ir Yc Ic IP GDP HPIr --ct

vecm 2 3 Ic Ir Yc Yr IP GDP HPIr; FEDR(-1) d_U(-1) d_PI(-1)  --crt

restrict --full
    b[1,Ic]=1
    b[2,Ic]=0
    b[3,Ic]=0
    b[1,Ir]=0
    b[2,Ir]=1
    b[3,Ir]=0
    b[1,Yc]=0
    b[2,Yc]=0
    b[3,Yc]=1
    b[1,Yr]=0
    b[2,Yr]=0
end restrict


series EC1 = $ec[,1]
series EC2 = $ec[,2]
series EC3 = $ec[,3]

list ALL_ENDO = d_Ic(-1) d_Ir(-1) d_Yc(-1) d_Yr(-1) 
list ALL_EXO = d_U(-1) d_PI(-1) d_IP(-1) d_GDP(-1) d_HPIr(-1) FEDR(-1) 
list ALL_EC=EC1 EC2 EC3  	

#replication of vecm
system method=fiml
    equation d_Ic const ALL_ENDO ALL_EXO ALL_EC
    equation d_Ir const ALL_ENDO ALL_EXO ALL_EC
    equation d_Yc const ALL_ENDO ALL_EXO ALL_EC
    equation d_Yr const ALL_ENDO ALL_EXO ALL_EC
end system



#without insignificatn exo

system method=fiml
    equation d_Ic const ALL_ENDO d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Ir const ALL_ENDO d_GDP(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Yc const ALL_ENDO d_HPIr(-1) d_U(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Yr const ALL_ENDO FEDR(-1) EC1 EC2 EC3
end system

#without insignificatn endo


system method=fiml
    equation d_Ic const d_Ic_1 d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Ir const d_Ir_1 d_Yc_1 d_GDP(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 
    equation d_Yc const d_Ir_1 d_Yc_1 d_HPIr(-1) d_U(-1) FEDR(-1) EC2 EC3
    equation d_Yr const d_Ic_1 d_Ir_1 d_Yc_1 FEDR(-1) EC1 EC2 EC3
end system

#without insignificatn EC

system method=fiml
    equation d_Ic const d_Ic_1 d_HPIr(-1) FEDR(-1) EC1 EC2 EC3
    equation d_Ir const d_Ir_1 d_Yc_1 d_GDP(-1) d_HPIr(-1) FEDR(-1) EC1 EC2 
    equation d_Yc const d_Ir_1 d_Yc_1 d_HPIr(-1) d_U(-1) FEDR(-1)  EC2 EC3
    equation d_Yr const d_Ic_1 d_Ir_1 d_Yc_1 FEDR(-1) EC1 EC2 EC3
end system


final_ll = $lnl
printf " LR-test, rank = 2: chi^2(3) = %6.4f [%6.4f]\n", 2*(full_ll-final_ll), \
pvalue(X, 2, 2*(full_ll-final_ll))

matrix S=$sigma
print S

#matrix X=$vcv
#print X

smpl full

loop t=2017:1..2017:4
    EC1[t] = EC1[2016:4]
    EC2[t] = EC2[2016:4]
    EC3[t] = EC3[2016:4]
endloop

fcast 2017:1 2017:4 --dynamic







#http://gretl.sourceforge.net/gretl-help/cmdref.html#fcast
